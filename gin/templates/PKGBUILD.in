_pkgname={{ dependency.name }}
pkgbase=mingw-w64-${_pkgname}
pkgname=${MINGW_PACKAGE_PREFIX}-${_pkgname}
pkgver=1
pkgrel=1
arch=( "any" )
depends=(
  {% for dep in dependency.get_dependencies() %}
    {% if not dep.build_only %}
    "${MINGW_PACKAGE_PREFIX}-{{ dep.name }}"
    {% endif %}
  {% endfor %}
)

makedepends=(
  {% for dep in dependency.get_dependencies() %}
    {% if dep.build_only %}
        {% if dep.name in mingw_packages %}
    "${MINGW_PACKAGE_PREFIX}-{{ dep.name }}"
        {% else %}
    "{{ dep.name }}"
        {% endif %}
    {% endif %}
  {% endfor %}
  {% if dependency.get_type() == 'meson' %}
    "mingw-w64-meson"
    "ninja"
  {% elif dependency.get_type() == 'cmake' %}
  {% elif dependency.get_type() == 'autotools' %}
  {% endif %}
)

options=("strip" "staticlibs")

source=(
  {% for source in dependency.get_sources() %}
    "{{ source }}"
  {% endfor %}
)
sha256sums=(
  {% for source in dependency.get_sources() %}
    {% if source.get_type() == "archive" %}
    "{{source.sha256}}"
    {% else %}
    "SKIP"
    {% endif %}
  {% endfor %}
)


{% if dependency.get_main_source().get_type() == "git" %}
pkgver() {
    cd "$srcdir/$_pkgname"
    git describe --long --tags | sed "s/\([^-]*-g\)/r\1/;s/-/./g"
}
{% endif %}

prepare() {

  {% if dependency.get_main_source().get_type() == "git" %}
    cd "$srcdir/$_pkgname"
    git submodule update --init
  {% elif dependency.get_main_source().get_type() == "archive" %}
    cd "$srcdir/$_pkgname-{{ dependency.get_main_source().version }}"
  {% endif %}

  {% if dependency.get_type() == 'meson' %}
    x86_64-w64-mingw32-meson build {{ dependency.get_flags() }}
  {% elif dependency.get_type() == 'cmake' %}
  {% elif dependency.get_type() == 'autotools' %}
  {% endif %}
}

build() {

  {% if dependency.get_main_source().get_type() == "git" %}
    cd "$srcdir/$_pkgname"
  {% elif dependency.get_main_source().get_type() == "archive" %}
    cd "$srcdir/$_pkgname-{{ dependency.get_main_source().version }}"
  {% endif %}
  
  {% if dependency.get_type() == 'meson' %}
    ninja -C build
  {% elif dependency.get_type() == 'cmake' %}
  {% elif dependency.get_type() == 'autotools' %}
  {% endif %}
}

package() {

  {% if dependency.get_main_source().get_type() == "git" %}
    cd "$srcdir/$_pkgname"
  {% elif dependency.get_main_source().get_type() == "archive" %}
    cd "$srcdir/$_pkgname-{{ dependency.get_main_source().version }}"
  {% endif %}
  
  {% if dependency.get_type() == 'meson' %}
    DESTDIR="${pkgdir}" ninja -C build install
  {% elif dependency.get_type() == 'cmake' %}
  {% elif dependency.get_type() == 'autotools' %}
  {% endif %}
}
