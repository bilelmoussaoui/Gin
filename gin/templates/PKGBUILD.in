_pkgname={{ dependency.name }}
pkgbase=mingw-w64-${_pkgname}
pkgname=${MINGW_PACKAGE_PREFIX}-${_pkgname}
pkgver={{ version }}
pkgrel=1
arch=( "any" )
depends=(
  {% for dep in dependency.get_dependencies() %}
    {% if not dep.build_only %}
      "${MINGW_PACKAGE_PREFIX}-{{ dep.name }}"
    {% endif %}
  {% endfor %}
)

makedepends=(
  {% for dep in dependency.get_dependencies() %}
    {% if dep.build_only %}
      "${MINGW_PACKAGE_PREFIX}-{{ dep.name }}"
    {% endif %}
  {% endfor %}
  {% if dependency.get_type() == 'meson' %}
  "${MINGW_PACKAGE_PREFIX}-meson"
  "${MINGW_PACKAGE_PREFIX}-ninja"
  {% elif dependency.get_type() == 'cmake' %}
  {% elif dependency.get_type() == 'autotools' %}
  {% endif %}
)

options=("strip" "staticlibs")
source=("$_pkgname::git+@GIT_REPO@#branch=@GIT_BRANCH@")
sha256sums=("SKIP")


pkgver() {
  cd "$srcdir/$_pkgname"
  git describe --long --tags | sed "s/\([^-]*-g\)/r\1/;s/-/./g"
}

prepare() {
  cd "$srcdir/$_pkgname"
  git submodule update --init
  meson build --prefix="${MINGW_PREFIX}"
}

build() {
  cd "$srcdir/$_pkgname"
  {% if dependency.get_type() == 'meson' %}
    ninja -C build
  {% elif dependency.get_type() == 'cmake' %}
  {% elif dependency.get_type() == 'autotools' %}
  {% endif %}
}

package() {
  cd "$srcdir/$_pkgname"
  {% if dependency.get_type() == 'meson' %}
    DESTDIR="${pkgdir}${MINGW_PREFIX}" ninja -C build install
  {% elif dependency.get_type() == 'cmake' %}
  {% elif dependency.get_type() == 'autotools' %}
  {% endif %}
}
